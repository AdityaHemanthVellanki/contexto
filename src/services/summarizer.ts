import { client, modelMapping } from '@/lib/azureOpenAI';
import { logUsage } from './usage';

/**
 * Generates a summary of the provided text using Azure OpenAI
 * 
 * @param text The text to summarize
 * @param userId Authenticated user ID for usage tracking
 * @returns A concise summary of the input text
 * @throws Error if the summary generation fails or if userId is not provided
 */
export async function runSummarizer(text: string, userId: string): Promise<string> {
  // Input validation
  if (!text || text.trim() === '') {
    throw new Error('Cannot summarize empty text');
  }
  
  if (!userId) {
    throw new Error('User ID is required for summarization');
  }

  try {
    // Call Azure OpenAI chat completions API
    const response = await client.chat.completions.create({
      model: modelMapping.turbo as string,
      messages: [
        {
          role: 'system',
          content: 'You are a summarization assistant. Provide a concise summary of the text.'
        },
        {
          role: 'user',
          content: text
        }
      ],
      temperature: 0.5,
      max_tokens: 500
    });

    // Validate response
    if (!response.choices || response.choices.length === 0) {
      throw new Error('No summary generated by Azure OpenAI API');
    }

    const summary = response.choices[0]?.message?.content;
    
    if (!summary) {
      throw new Error('Empty summary returned from Azure OpenAI API');
    }

    // Log usage with user ID
    await logUsage('summarizer', {
      promptTokens: response.usage?.prompt_tokens || 0,
      completionTokens: response.usage?.completion_tokens || 0
    }, userId);

    return summary;
  } catch (error) {
    // Handle specific Azure OpenAI API errors
    if (error instanceof Error) {
      // Specific error handling based on error types
      if (error.message.includes('API key')) {
        throw new Error('Azure OpenAI authentication failed - check API key');
      } else if (error.message.includes('rate limit')) {
        throw new Error('Azure OpenAI rate limit exceeded - try again later');
      } else if (error.message.includes('timeout')) {
        throw new Error('Azure OpenAI request timed out - try again later');
      }
      
      throw new Error(`Summarization failed: ${error.message}`);
    }
    
    throw new Error('Summarization failed due to an unknown error');
  }
}
